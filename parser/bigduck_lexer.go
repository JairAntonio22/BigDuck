// Code generated from BigDuck.g4 by ANTLR 4.9. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 44, 283,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 3, 2, 3, 2, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 9,
	3, 9, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3,
	13, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18,
	3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3,
	22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 24,
	3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 26, 3, 26, 3, 26, 3,
	26, 3, 26, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28,
	3, 28, 3, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 31, 3,
	31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 32, 3, 33, 3, 33, 3, 33, 3, 33,
	3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35, 3, 35, 3, 35, 3,
	35, 3, 36, 3, 36, 3, 36, 3, 36, 3, 36, 3, 37, 3, 37, 3, 37, 3, 37, 3, 37,
	3, 37, 3, 38, 3, 38, 3, 39, 6, 39, 221, 10, 39, 13, 39, 14, 39, 222, 3,
	40, 6, 40, 226, 10, 40, 13, 40, 14, 40, 227, 3, 41, 5, 41, 231, 10, 41,
	3, 42, 3, 42, 3, 42, 3, 43, 3, 43, 3, 43, 5, 43, 239, 10, 43, 3, 43, 3,
	43, 5, 43, 243, 10, 43, 3, 43, 5, 43, 246, 10, 43, 3, 44, 3, 44, 7, 44,
	250, 10, 44, 12, 44, 14, 44, 253, 11, 44, 3, 44, 3, 44, 3, 45, 3, 45, 3,
	45, 3, 45, 7, 45, 261, 10, 45, 12, 45, 14, 45, 264, 11, 45, 3, 46, 3, 46,
	3, 46, 3, 46, 3, 47, 3, 47, 3, 47, 3, 47, 7, 47, 274, 10, 47, 12, 47, 14,
	47, 277, 11, 47, 3, 47, 3, 47, 3, 47, 3, 47, 3, 47, 3, 275, 2, 48, 3, 3,
	5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13,
	25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22,
	43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29, 57, 30, 59, 31,
	61, 32, 63, 33, 65, 34, 67, 35, 69, 36, 71, 37, 73, 38, 75, 2, 77, 2, 79,
	2, 81, 2, 83, 39, 85, 40, 87, 41, 89, 42, 91, 43, 93, 44, 3, 2, 8, 3, 2,
	50, 59, 4, 2, 67, 92, 99, 124, 4, 2, 45, 45, 47, 47, 4, 2, 71, 71, 103,
	103, 3, 2, 36, 36, 5, 2, 11, 12, 15, 15, 34, 34, 2, 289, 2, 3, 3, 2, 2,
	2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2,
	2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2,
	2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3,
	2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35,
	3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2,
	43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2,
	2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2,
	2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2,
	2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3,
	2, 2, 2, 2, 83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89,
	3, 2, 2, 2, 2, 91, 3, 2, 2, 2, 2, 93, 3, 2, 2, 2, 3, 95, 3, 2, 2, 2, 5,
	97, 3, 2, 2, 2, 7, 99, 3, 2, 2, 2, 9, 101, 3, 2, 2, 2, 11, 103, 3, 2, 2,
	2, 13, 105, 3, 2, 2, 2, 15, 107, 3, 2, 2, 2, 17, 110, 3, 2, 2, 2, 19, 112,
	3, 2, 2, 2, 21, 115, 3, 2, 2, 2, 23, 117, 3, 2, 2, 2, 25, 119, 3, 2, 2,
	2, 27, 122, 3, 2, 2, 2, 29, 125, 3, 2, 2, 2, 31, 127, 3, 2, 2, 2, 33, 129,
	3, 2, 2, 2, 35, 131, 3, 2, 2, 2, 37, 133, 3, 2, 2, 2, 39, 135, 3, 2, 2,
	2, 41, 137, 3, 2, 2, 2, 43, 140, 3, 2, 2, 2, 45, 145, 3, 2, 2, 2, 47, 152,
	3, 2, 2, 2, 49, 155, 3, 2, 2, 2, 51, 160, 3, 2, 2, 2, 53, 165, 3, 2, 2,
	2, 55, 171, 3, 2, 2, 2, 57, 176, 3, 2, 2, 2, 59, 180, 3, 2, 2, 2, 61, 183,
	3, 2, 2, 2, 63, 187, 3, 2, 2, 2, 65, 191, 3, 2, 2, 2, 67, 195, 3, 2, 2,
	2, 69, 201, 3, 2, 2, 2, 71, 206, 3, 2, 2, 2, 73, 211, 3, 2, 2, 2, 75, 217,
	3, 2, 2, 2, 77, 220, 3, 2, 2, 2, 79, 225, 3, 2, 2, 2, 81, 230, 3, 2, 2,
	2, 83, 232, 3, 2, 2, 2, 85, 235, 3, 2, 2, 2, 87, 247, 3, 2, 2, 2, 89, 256,
	3, 2, 2, 2, 91, 265, 3, 2, 2, 2, 93, 269, 3, 2, 2, 2, 95, 96, 7, 61, 2,
	2, 96, 4, 3, 2, 2, 2, 97, 98, 7, 46, 2, 2, 98, 6, 3, 2, 2, 2, 99, 100,
	7, 93, 2, 2, 100, 8, 3, 2, 2, 2, 101, 102, 7, 95, 2, 2, 102, 10, 3, 2,
	2, 2, 103, 104, 7, 42, 2, 2, 104, 12, 3, 2, 2, 2, 105, 106, 7, 43, 2, 2,
	106, 14, 3, 2, 2, 2, 107, 108, 7, 47, 2, 2, 108, 109, 7, 64, 2, 2, 109,
	16, 3, 2, 2, 2, 110, 111, 7, 63, 2, 2, 111, 18, 3, 2, 2, 2, 112, 113, 7,
	49, 2, 2, 113, 114, 7, 63, 2, 2, 114, 20, 3, 2, 2, 2, 115, 116, 7, 62,
	2, 2, 116, 22, 3, 2, 2, 2, 117, 118, 7, 64, 2, 2, 118, 24, 3, 2, 2, 2,
	119, 120, 7, 64, 2, 2, 120, 121, 7, 63, 2, 2, 121, 26, 3, 2, 2, 2, 122,
	123, 7, 62, 2, 2, 123, 124, 7, 63, 2, 2, 124, 28, 3, 2, 2, 2, 125, 126,
	7, 45, 2, 2, 126, 30, 3, 2, 2, 2, 127, 128, 7, 47, 2, 2, 128, 32, 3, 2,
	2, 2, 129, 130, 7, 44, 2, 2, 130, 34, 3, 2, 2, 2, 131, 132, 7, 49, 2, 2,
	132, 36, 3, 2, 2, 2, 133, 134, 7, 125, 2, 2, 134, 38, 3, 2, 2, 2, 135,
	136, 7, 127, 2, 2, 136, 40, 3, 2, 2, 2, 137, 138, 7, 62, 2, 2, 138, 139,
	7, 47, 2, 2, 139, 42, 3, 2, 2, 2, 140, 141, 7, 114, 2, 2, 141, 142, 7,
	116, 2, 2, 142, 143, 7, 113, 2, 2, 143, 144, 7, 101, 2, 2, 144, 44, 3,
	2, 2, 2, 145, 146, 7, 116, 2, 2, 146, 147, 7, 103, 2, 2, 147, 148, 7, 118,
	2, 2, 148, 149, 7, 119, 2, 2, 149, 150, 7, 116, 2, 2, 150, 151, 7, 112,
	2, 2, 151, 46, 3, 2, 2, 2, 152, 153, 7, 107, 2, 2, 153, 154, 7, 104, 2,
	2, 154, 48, 3, 2, 2, 2, 155, 156, 7, 103, 2, 2, 156, 157, 7, 110, 2, 2,
	157, 158, 7, 117, 2, 2, 158, 159, 7, 103, 2, 2, 159, 50, 3, 2, 2, 2, 160,
	161, 7, 110, 2, 2, 161, 162, 7, 113, 2, 2, 162, 163, 7, 113, 2, 2, 163,
	164, 7, 114, 2, 2, 164, 52, 3, 2, 2, 2, 165, 166, 7, 100, 2, 2, 166, 167,
	7, 116, 2, 2, 167, 168, 7, 103, 2, 2, 168, 169, 7, 99, 2, 2, 169, 170,
	7, 109, 2, 2, 170, 54, 3, 2, 2, 2, 171, 172, 7, 117, 2, 2, 172, 173, 7,
	109, 2, 2, 173, 174, 7, 107, 2, 2, 174, 175, 7, 114, 2, 2, 175, 56, 3,
	2, 2, 2, 176, 177, 7, 99, 2, 2, 177, 178, 7, 112, 2, 2, 178, 179, 7, 102,
	2, 2, 179, 58, 3, 2, 2, 2, 180, 181, 7, 113, 2, 2, 181, 182, 7, 116, 2,
	2, 182, 60, 3, 2, 2, 2, 183, 184, 7, 112, 2, 2, 184, 185, 7, 113, 2, 2,
	185, 186, 7, 118, 2, 2, 186, 62, 3, 2, 2, 2, 187, 188, 7, 120, 2, 2, 188,
	189, 7, 99, 2, 2, 189, 190, 7, 116, 2, 2, 190, 64, 3, 2, 2, 2, 191, 192,
	7, 107, 2, 2, 192, 193, 7, 112, 2, 2, 193, 194, 7, 118, 2, 2, 194, 66,
	3, 2, 2, 2, 195, 196, 7, 104, 2, 2, 196, 197, 7, 110, 2, 2, 197, 198, 7,
	113, 2, 2, 198, 199, 7, 99, 2, 2, 199, 200, 7, 118, 2, 2, 200, 68, 3, 2,
	2, 2, 201, 202, 7, 100, 2, 2, 202, 203, 7, 113, 2, 2, 203, 204, 7, 113,
	2, 2, 204, 205, 7, 110, 2, 2, 205, 70, 3, 2, 2, 2, 206, 207, 7, 118, 2,
	2, 207, 208, 7, 116, 2, 2, 208, 209, 7, 119, 2, 2, 209, 210, 7, 103, 2,
	2, 210, 72, 3, 2, 2, 2, 211, 212, 7, 104, 2, 2, 212, 213, 7, 99, 2, 2,
	213, 214, 7, 110, 2, 2, 214, 215, 7, 117, 2, 2, 215, 216, 7, 103, 2, 2,
	216, 74, 3, 2, 2, 2, 217, 218, 9, 2, 2, 2, 218, 76, 3, 2, 2, 2, 219, 221,
	5, 75, 38, 2, 220, 219, 3, 2, 2, 2, 221, 222, 3, 2, 2, 2, 222, 220, 3,
	2, 2, 2, 222, 223, 3, 2, 2, 2, 223, 78, 3, 2, 2, 2, 224, 226, 9, 3, 2,
	2, 225, 224, 3, 2, 2, 2, 226, 227, 3, 2, 2, 2, 227, 225, 3, 2, 2, 2, 227,
	228, 3, 2, 2, 2, 228, 80, 3, 2, 2, 2, 229, 231, 9, 4, 2, 2, 230, 229, 3,
	2, 2, 2, 230, 231, 3, 2, 2, 2, 231, 82, 3, 2, 2, 2, 232, 233, 5, 81, 41,
	2, 233, 234, 5, 77, 39, 2, 234, 84, 3, 2, 2, 2, 235, 238, 5, 77, 39, 2,
	236, 237, 7, 48, 2, 2, 237, 239, 5, 77, 39, 2, 238, 236, 3, 2, 2, 2, 238,
	239, 3, 2, 2, 2, 239, 245, 3, 2, 2, 2, 240, 242, 9, 5, 2, 2, 241, 243,
	5, 81, 41, 2, 242, 241, 3, 2, 2, 2, 242, 243, 3, 2, 2, 2, 243, 244, 3,
	2, 2, 2, 244, 246, 5, 77, 39, 2, 245, 240, 3, 2, 2, 2, 245, 246, 3, 2,
	2, 2, 246, 86, 3, 2, 2, 2, 247, 251, 7, 36, 2, 2, 248, 250, 10, 6, 2, 2,
	249, 248, 3, 2, 2, 2, 250, 253, 3, 2, 2, 2, 251, 249, 3, 2, 2, 2, 251,
	252, 3, 2, 2, 2, 252, 254, 3, 2, 2, 2, 253, 251, 3, 2, 2, 2, 254, 255,
	7, 36, 2, 2, 255, 88, 3, 2, 2, 2, 256, 262, 5, 79, 40, 2, 257, 261, 5,
	79, 40, 2, 258, 261, 5, 75, 38, 2, 259, 261, 7, 97, 2, 2, 260, 257, 3,
	2, 2, 2, 260, 258, 3, 2, 2, 2, 260, 259, 3, 2, 2, 2, 261, 264, 3, 2, 2,
	2, 262, 260, 3, 2, 2, 2, 262, 263, 3, 2, 2, 2, 263, 90, 3, 2, 2, 2, 264,
	262, 3, 2, 2, 2, 265, 266, 9, 7, 2, 2, 266, 267, 3, 2, 2, 2, 267, 268,
	8, 46, 2, 2, 268, 92, 3, 2, 2, 2, 269, 270, 7, 37, 2, 2, 270, 271, 7, 126,
	2, 2, 271, 275, 3, 2, 2, 2, 272, 274, 11, 2, 2, 2, 273, 272, 3, 2, 2, 2,
	274, 277, 3, 2, 2, 2, 275, 276, 3, 2, 2, 2, 275, 273, 3, 2, 2, 2, 276,
	278, 3, 2, 2, 2, 277, 275, 3, 2, 2, 2, 278, 279, 7, 126, 2, 2, 279, 280,
	7, 37, 2, 2, 280, 281, 3, 2, 2, 2, 281, 282, 8, 47, 2, 2, 282, 94, 3, 2,
	2, 2, 13, 2, 222, 227, 230, 238, 242, 245, 251, 260, 262, 275, 3, 8, 2,
	2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "';'", "','", "'['", "']'", "'('", "')'", "'->'", "'='", "'/='", "'<'",
	"'>'", "'>='", "'<='", "'+'", "'-'", "'*'", "'/'", "'{'", "'}'", "'<-'",
	"'proc'", "'return'", "'if'", "'else'", "'loop'", "'break'", "'skip'",
	"'and'", "'or'", "'not'", "'var'", "'int'", "'float'", "'bool'", "'true'",
	"'false'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
	"", "", "", "PROC", "RETURN", "IF", "ELSE", "LOOP", "BREAK", "SKIP_W",
	"AND", "OR", "NOT", "VAR", "INT", "FLOAT", "BOOL", "TRUE", "FALSE", "CTE_INT",
	"CTE_FLOAT", "CTE_STRING", "ID", "WS", "COMMENT",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
	"T__17", "T__18", "T__19", "PROC", "RETURN", "IF", "ELSE", "LOOP", "BREAK",
	"SKIP_W", "AND", "OR", "NOT", "VAR", "INT", "FLOAT", "BOOL", "TRUE", "FALSE",
	"DIGIT", "DIGITS", "LETTER", "SIGN", "CTE_INT", "CTE_FLOAT", "CTE_STRING",
	"ID", "WS", "COMMENT",
}

type BigDuckLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewBigDuckLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *BigDuckLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewBigDuckLexer(input antlr.CharStream) *BigDuckLexer {
	l := new(BigDuckLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "BigDuck.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// BigDuckLexer tokens.
const (
	BigDuckLexerT__0       = 1
	BigDuckLexerT__1       = 2
	BigDuckLexerT__2       = 3
	BigDuckLexerT__3       = 4
	BigDuckLexerT__4       = 5
	BigDuckLexerT__5       = 6
	BigDuckLexerT__6       = 7
	BigDuckLexerT__7       = 8
	BigDuckLexerT__8       = 9
	BigDuckLexerT__9       = 10
	BigDuckLexerT__10      = 11
	BigDuckLexerT__11      = 12
	BigDuckLexerT__12      = 13
	BigDuckLexerT__13      = 14
	BigDuckLexerT__14      = 15
	BigDuckLexerT__15      = 16
	BigDuckLexerT__16      = 17
	BigDuckLexerT__17      = 18
	BigDuckLexerT__18      = 19
	BigDuckLexerT__19      = 20
	BigDuckLexerPROC       = 21
	BigDuckLexerRETURN     = 22
	BigDuckLexerIF         = 23
	BigDuckLexerELSE       = 24
	BigDuckLexerLOOP       = 25
	BigDuckLexerBREAK      = 26
	BigDuckLexerSKIP_W     = 27
	BigDuckLexerAND        = 28
	BigDuckLexerOR         = 29
	BigDuckLexerNOT        = 30
	BigDuckLexerVAR        = 31
	BigDuckLexerINT        = 32
	BigDuckLexerFLOAT      = 33
	BigDuckLexerBOOL       = 34
	BigDuckLexerTRUE       = 35
	BigDuckLexerFALSE      = 36
	BigDuckLexerCTE_INT    = 37
	BigDuckLexerCTE_FLOAT  = 38
	BigDuckLexerCTE_STRING = 39
	BigDuckLexerID         = 40
	BigDuckLexerWS         = 41
	BigDuckLexerCOMMENT    = 42
)
